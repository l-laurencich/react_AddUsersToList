{"ast":null,"code":"var _jsxFileName = \"/home/luqui/code/l-laurencich/react-redux-course/first project/01-starting-project/src/components/Userinput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport Button from \"../UI/Button\";\nimport Card from \"../UI/Card\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport \"./Userinput.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Userinput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const ageInputRef = useRef();\n  const enteredName = nameInputRef.current.value;\n  const enteredAge = ageInputRef.current.value;\n  const [error, setError] = useState();\n\n  const nameInputChangeHandler = event => {\n    if (event.target.value.trim().length > 0) {}\n  };\n\n  const ageInputChangeHandler = event => {\n    if (event.target.value > 0) {}\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (enteredName.trim().length === 0 || enteredAge.trim().length === 0) {\n      setError({\n        title: 'Invalid input',\n        message: 'Please provide a valid input (non empty)'\n      });\n      return;\n    }\n\n    if (+enteredAge < 1) {\n      setError({\n        title: 'Invalid age',\n        message: 'Please provide a valid age (< 0)'\n      });\n      return;\n    }\n\n    props.onAddUser(enteredName, enteredAge);\n  };\n\n  const resetError = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      resetError: resetError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"input\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          onChange: nameInputChangeHandler,\n          value: enteredName,\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"age\",\n          type: \"number\",\n          onChange: ageInputChangeHandler,\n          value: enteredAge,\n          ref: ageInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add new User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Userinput, \"oeh9P4do1L6ON2Ex+93ODUUduFk=\");\n\n_c = Userinput;\nexport default Userinput;\n\nvar _c;\n\n$RefreshReg$(_c, \"Userinput\");","map":{"version":3,"sources":["/home/luqui/code/l-laurencich/react-redux-course/first project/01-starting-project/src/components/Userinput.js"],"names":["React","useState","useRef","Button","Card","ErrorModal","Userinput","props","nameInputRef","ageInputRef","enteredName","current","value","enteredAge","error","setError","nameInputChangeHandler","event","target","trim","length","ageInputChangeHandler","formSubmitHandler","preventDefault","title","message","onAddUser","resetError"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Button from \"../UI/Button\";\nimport Card from \"../UI/Card\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport \"./Userinput.css\";\n\nconst Userinput = (props) => {\n  const nameInputRef = useRef();\n  const ageInputRef = useRef();\n  const enteredName = nameInputRef.current.value\n  const enteredAge = ageInputRef.current.value\n\n  const [error, setError] = useState();\n\n  const nameInputChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n    }\n  };\n\n  const ageInputChangeHandler = (event) => {\n    if (event.target.value > 0) {\n    }\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    if (enteredName.trim().length === 0 || enteredAge.trim().length === 0) {\n      setError({\n        title: 'Invalid input',\n        message: 'Please provide a valid input (non empty)'\n      });\n      return;\n    }\n    if (+enteredAge < 1) {\n      setError({\n        title: 'Invalid age',\n        message: 'Please provide a valid age (< 0)'\n      });\n      return;\n    }\n    props.onAddUser(enteredName, enteredAge);\n  };\n\n  const resetError = () => {\n    setError(null)\n  }\n\n  return (\n    <React.Fragment>\n      {error && <ErrorModal\n        title={error.title}\n        message={error.message}\n        resetError={resetError}\n      ></ErrorModal>}\n      <Card className=\"input\">\n        <form onSubmit={formSubmitHandler}>\n          <label htmlFor=\"username\">Username</label>\n          <input\n            id=\"username\"\n            type=\"text\"\n            onChange={nameInputChangeHandler}\n            value={enteredName}\n            ref={nameInputRef}\n          />\n\n          <label htmlFor=\"age\">age</label>\n          <input\n            id=\"age\"\n            type=\"number\"\n            onChange={ageInputChangeHandler}\n            value={enteredAge}\n            ref={ageInputRef}\n          />\n\n\n          <Button type=\"submit\">Add new User</Button>\n        </form>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Userinput;\n"]},"metadata":{},"sourceType":"module"}